<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
   Copyright (C) 2015 Glyptodon LLC

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   THE SOFTWARE.
-->

<mapper namespace="org.glyptodon.guacamole.auth.jdbc.connectiongroup.ConnectionGroupMapper" >

    <!-- Result mapper for connection objects -->
    <resultMap id="ConnectionGroupResultMap" type="org.glyptodon.guacamole.auth.jdbc.connectiongroup.ConnectionGroupModel" >
        <id     column="connection_group_id"      property="objectID"              jdbcType="INTEGER"/>
        <result column="connection_group_name"    property="name"                  jdbcType="VARCHAR"/>
        <result column="parent_id"                property="parentIdentifier"      jdbcType="INTEGER"/>
        <result column="type"                     property="type"                  jdbcType="VARCHAR"
                javaType="org.glyptodon.guacamole.net.auth.ConnectionGroup$Type"/>
        <result column="max_connections"          property="maxConnections"        jdbcType="INTEGER"/>
        <result column="max_connections_per_user" property="maxConnectionsPerUser" jdbcType="INTEGER"/>
    </resultMap>

    <!-- Select all connection group identifiers -->
    <select id="selectIdentifiers" resultType="string">
        SELECT connection_group_id 
        FROM guacamole_connection_group
    </select>

    <!-- Select identifiers of all readable connection groups -->
    <select id="selectReadableIdentifiers" resultType="string">
        SELECT connection_group_id
        FROM guacamole_connection_group_permission
        WHERE
            user_id = #{user.objectID,jdbcType=INTEGER}
            AND permission = 'READ'
    </select>

    <!-- Select all connection identifiers within a particular connection group -->
    <select id="selectIdentifiersWithin" resultType="string">
        SELECT connection_group_id 
        FROM guacamole_connection_group
        WHERE
            <if test="parentIdentifier != null">parent_id = #{parentIdentifier,jdbcType=VARCHAR}</if>
            <if test="parentIdentifier == null">parent_id IS NULL</if>
    </select>

    <!-- Select identifiers of all readable connection groups within a particular connection group -->
    <select id="selectReadableIdentifiersWithin" resultType="string">
        SELECT guacamole_connection_group.connection_group_id
        FROM guacamole_connection_group
        JOIN guacamole_connection_group_permission ON guacamole_connection_group_permission.connection_group_id = guacamole_connection_group.connection_group_id
        WHERE
            <if test="parentIdentifier != null">parent_id = #{parentIdentifier,jdbcType=VARCHAR}</if>
            <if test="parentIdentifier == null">parent_id IS NULL</if>
            AND user_id = #{user.objectID,jdbcType=INTEGER}
            AND permission = 'READ'
    </select>

    <!-- Select multiple connection groups by identifier -->
    <select id="select" resultMap="ConnectionGroupResultMap">

        SELECT
            connection_group_id,
            connection_group_name,
            parent_id,
            type,
            max_connections,
            max_connections_per_user
        FROM guacamole_connection_group
        WHERE connection_group_id IN
            <foreach collection="identifiers" item="identifier"
                     open="(" separator="," close=")">
                #{identifier,jdbcType=VARCHAR}
            </foreach>

    </select>

    <!-- Select multiple connection groups by identifier only if readable -->
    <select id="selectReadable" resultMap="ConnectionGroupResultMap">

        SELECT
            guacamole_connection_group.connection_group_id,
            connection_group_name,
            parent_id,
            type,
            max_connections,
            max_connections_per_user
        FROM guacamole_connection_group
        JOIN guacamole_connection_group_permission ON guacamole_connection_group_permission.connection_group_id = guacamole_connection_group.connection_group_id
        WHERE guacamole_connection_group.connection_group_id IN
            <foreach collection="identifiers" item="identifier"
                     open="(" separator="," close=")">
                #{identifier,jdbcType=VARCHAR}
            </foreach>
            AND user_id = #{user.objectID,jdbcType=INTEGER}
            AND permission = 'READ'

    </select>

    <!-- Select single connection group by name -->
    <select id="selectOneByName" resultMap="ConnectionGroupResultMap">

        SELECT
            connection_group_id,
            connection_group_name,
            parent_id,
            type,
            max_connections,
            max_connections_per_user
        FROM guacamole_connection_group
        WHERE 
            <if test="parentIdentifier != null">parent_id = #{parentIdentifier,jdbcType=VARCHAR}</if>
            <if test="parentIdentifier == null">parent_id IS NULL</if>
            AND connection_group_name = #{name,jdbcType=VARCHAR}

    </select>

    <!-- Delete single connection group by identifier -->
    <delete id="delete">
        DELETE FROM guacamole_connection_group
        WHERE connection_group_id = #{identifier,jdbcType=VARCHAR}
    </delete>

    <!-- Insert single connection -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="object.objectID"
            parameterType="org.glyptodon.guacamole.auth.jdbc.connectiongroup.ConnectionGroupModel">

        INSERT INTO guacamole_connection_group (
            connection_group_name,
            parent_id,
            type,
            max_connections,
            max_connections_per_user
        )
        VALUES (
            #{object.name,jdbcType=VARCHAR},
            #{object.parentIdentifier,jdbcType=VARCHAR},
            #{object.type,jdbcType=VARCHAR},
            #{object.maxConnections,jdbcType=INTEGER},
            #{object.maxConnectionsPerUser,jdbcType=INTEGER}
        )

    </insert>

    <!-- Update single connection group -->
    <update id="update" parameterType="org.glyptodon.guacamole.auth.jdbc.connectiongroup.ConnectionGroupModel">
        UPDATE guacamole_connection_group
        SET connection_group_name    = #{object.name,jdbcType=VARCHAR},
            parent_id                = #{object.parentIdentifier,jdbcType=VARCHAR},
            type                     = #{object.type,jdbcType=VARCHAR},
            max_connections          = #{object.maxConnections,jdbcType=INTEGER},
            max_connections_per_user = #{object.maxConnectionsPerUser,jdbcType=INTEGER}
        WHERE connection_group_id = #{object.objectID,jdbcType=INTEGER}
    </update>

</mapper>